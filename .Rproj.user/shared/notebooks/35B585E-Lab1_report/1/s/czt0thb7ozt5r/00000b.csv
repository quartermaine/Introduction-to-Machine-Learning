"0","feature_selection<-function(X,Y,N){"
"0"," "
"0","  n<-ncol(X)"
"0","  idx<-1:2^n-1"
"0","  t<-vector()"
"0","  mat<-sapply(idx, function(id){"
"0","    t<-cbind(t,as.integer(intToBits(id)))"
"0","    t})"
"0","  m<-mat[1:n,2:ncol(mat)]"
"0","  ######################################"
"0","  set.seed(12345)"
"0","  #X<-X[sample(nrow(X)),]"
"0","  #Y<-Y[sample(length(Y))]"
"0","  id<-sample(nrow(X))"
"0","  X<-X[id,]"
"0","  Y<-Y[id]"
"0","  #Create N equally size folds"
"0","  folds <- cut(seq(1,nrow(X)),breaks=N,labels=FALSE)"
"0","  d<-matrix(0,nrow=N,ncol=dim(m)[2])"
"0","  n_features<-rep(0,ncol(d))"
"0","  for (i in 1:ncol(m)){"
"0","    x<-X[which(m[,i]==1)]"
"0","    n_features[i]<-ncol(x)"
"0","    for(j in 1:N){"
"0","      "
"0","      testIndexes <- which(folds==j,arr.ind=TRUE)"
"0","      testX <- as.matrix(x[testIndexes, ])"
"0","      trainX <- as.matrix(x[-testIndexes, ])"
"0","      testy<-Y[testIndexes]"
"0","      trainy<-Y[-testIndexes]"
"0","      trainX<-cbind(1,trainX)"
"0","      testX<-cbind(1,testX)"
"0","  "
"0","      w<-round(as.vector(solve(t(trainX)%*%trainX)%*%t(trainX)%*%trainy),3)"
"0","      y_pred<-round(as.matrix(testX%*%w),3)"
"0","      sse<-sum((testy-y_pred)^2)"
"0","      d[j,i]<-sse"
"0","    }"
"0","  }"
"0"," d<-d"
"0"," s<-apply(d, MARGIN = 2, function(x) mean(x, na.rm=TRUE))"
"0","  bindex<-which(s==min(s))"
"0","  best_comb<-X[which(m[,bindex]==1)]"
"0","  plot(x=n_features,y=s,type=""p"",xlab=""number of features"",ylab=""CV score"",col=ifelse(s==s[bindex],""red"",""black""),main=""CV score for every combination of Features"")"
"0","  text(x=3.5,y=522.8431,labels=c(""best model--->""))"
"0","  return(list(""best combination""=colnames(best_comb),""best cv score""=s[bindex]))"
"0","}"
"0","Y<-swiss[,""Fertility""]"
"0","X<-swiss[!names(swiss)%in%c(""Fertility"")]"
"0","D<-feature_selection(X,Y,5)"
