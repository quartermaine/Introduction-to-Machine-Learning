"0","set.seed(12345)"
"0","rng=function(data, mle) {"
"0","  data1=data.frame(EX=data$EX, MET=data$MET)"
"0","  n=length(data$EX)"
"0","  #generate new EX"
"0","  m<-predict(mle,data=data1)"
"0","  #     "
"0","  data1$EX<-rnorm(n,m,sd(residuals(mle)))"
"0","  return(data1)"
"0","}"
"0","f1=function(data1){"
"0","  mod<-tree(EX~MET,data=data1,minsize=8)"
"0","  modd<-prune.tree(mod,best=3)                 #fit tree"
"0","    #predict values from the original data"
"0","  predictedP<-predict(modd,ord_state)"
"0","  return(predictedP)"
"0","  "
"0","}"
"0","f2=function(data1){"
"0","  mod<-tree(EX~MET,data=data1,minsize=8)"
"0","  modd<-prune.tree(mod,best=3)                 #fit tree"
"0","    #predict values from the original data"
"0","  pEX<-predict(modd,ord_state)"
"0","  n=length(ord_state$EX)"
"0","  predictedP=rnorm(n,pEX,sd(residuals(btree)))"
"0","  return(predictedP)"
"0","}"
"0","p_boot1=boot(ord_state, statistic=f1, R=1000,"
"0","         mle=btree,ran.gen=rng, sim=""parametric"",parallel = ""multicore"",ncpus=4)"
"0","e1=envelope(p_boot1) #compute confidence bands"
"0","set.seed(12345)"
"0","p_boot2=boot(ord_state,statistic=f2,R=1000,"
"0","             mle=btree,ran.gen = rng,sim=""parametric"",parallel = ""multicore"",ncpus = 4)"
"0","e2=envelope(p_boot2)"
"2","unable to achieve requested overall error rate"
"0","plot(ord_state$MET, ord_state$EX, pch=21, bg=""orange"",ylim=c(150,460))"
