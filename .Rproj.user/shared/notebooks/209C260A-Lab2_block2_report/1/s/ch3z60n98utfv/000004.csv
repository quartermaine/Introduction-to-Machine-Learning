"0","t<-sapply(df[,-which(names(df)==""Conference"")],"
"0","          function(x){ t.test(x[df$Conference==1],x[df$Conference==0])[[""p.value""]]})"
"0","benj<-function(p_values,alpha=0.05){"
"0","  p_values<-sort(p_values)"
"0","  indexes<-c(1:length(p_values))"
"0","  L<-p_values-((alpha*indexes)/length(p_values))"
"0","  best_p<-max(L[which(L<0)])"
"0","  cutoff<-p_values[L==best_p]"
"0","  rejected_values<-p_values[p_values<=cutoff]"
"0","  list(cutoff,rejected_values)"
"0","  "
"0","               "
"0","}"
"0","rej<-as.data.frame(benj(t)[[2]])"
"0","colnames(rej)<-c(""p-value"")"
"0","cat(""========================================================\n"","
"0","    ""The cutoff value is: "",benj(t)[[1]])"
"1","========================================================
"
"1"," "
"1","The cutoff value is: "
"1"," "
"1","0.0003762328"
"0","cat(""\n"")"
"1","
"
"0","cat(""=========================================================\n"","
"0","    ""The features coresponding to reject hypotheses are : \n"")"
"1","=========================================================
"
"1"," "
"1","The features coresponding to reject hypotheses are : 
"
"0","kable(rej, caption = ""Benjamin test"")"
