set.seed(1234567890)
library(geosphere)

stations <- read.csv("stations.csv",stringsAsFactors = F,fileEncoding = "latin1")
temps <- read.csv("temps50k.csv",stringsAsFactors = F)
st <- merge(stations,temps,by="station_number")
h_distance <- 50000        # These three values are up to the students
h_date <-27
h_time <-3600 * 1.5
a <- 58.413738 #latitude # The point to predict (up to the students)
b <- 15.623510  #logitude
date1 <- "2015-12-23" # The date to predict (up to the students)
times <- c("04:00:00", "06:00:00","08:00:00" ,"10:00:00","12:00:00","14:00:00", 
           "16:00:00","18:00:00","20:00:00","22:00:00","24:00:00")


temp <- vector(length=length(times))
# Studentsâ€™ code here

timesf<-as.difftime(times , units = "sec")
pred_date<-as.POSIXlt(as.Date(date1))$yday


st$yday <-as.POSIXlt(st$date)$yday
st$sectime <-as.difftime(as.character(st$ time), units= "secs" )


st_filtered<-st[st$date< pred_date ,]



d1<-distm(st_filtered[,c("longitude","latitude")], c(b,a),fun=distHaversine)


func_diff <- function(a,b,p ) {
  dif <- abs(as.numeric(a - b))
  ifelse( 2*dif > p , p- dif , dif )
}


func <-function(time ,h){
  dist <- func_diff(time , st$sectime , 86400)
  exp(-(dist/h)^2)
}


k1<-exp(-(d1/h_distance)^2)

k2<-exp(-(func_diff(pred_date,st_filtered$yday,365)/h_date)^2)

for(i in 1:length(timesf)){
  k3<-func(timesf[i],h_time)
  K<-as.vector(k1)+as.vector(k2)+as.vector(k3)
  temp[i]<-sum(K*st_filtered$air_temperature)/sum(K)
  
}

temp_mult<-vector(length=length(times))
for(i in 1:length(timesf)){
  k3<-func(timesf[i],h_time)
  K1<-as.vector(k1)*as.vector(k2)*as.vector(k3)
  temp_mult[i]<-sum(K1*st_filtered$air_temperature)/sum(K1)
  
}


times_ps<-as.POSIXct(times,format="%H:%M:%S")
plot(times_ps,temp, type="o",main="Liknoping '2013-08-23",col="blue",ylim=c(-5,5))
lines(times_ps,temp_mult,col="red",type ="o")
legend("topright", legend=c("Sum", "Product"), col=c("blue", "red"),lty = 1)



